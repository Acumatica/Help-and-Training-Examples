{
	"info": {
		"_postman_id": "867c7893-c9ca-420b-a8f9-f7b96eeb2969",
		"name": "MyStoreIntegration_DataRetrieval",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1878971"
	},
	"item": [
		{
			"name": "Part 1: Authorization of the Application to Work with the Web Service",
			"item": [
				{
					"name": "Lesson 1.2: Requesting a Token Manually",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var responseData = pm.response.json();\r",
									"pm.collectionVariables.set(\"accessToken\",responseData.access_token);\r",
									"postman.setNextRequest(\"Lesson 2.1: Retrieving the List of Sales Orders with Document and Shipment Details\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{Username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{Password}}",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "api",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{ClientID}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{ClientSecret}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{InstanceURL}}/identity/connect/token",
							"host": [
								"{{InstanceURL}}"
							],
							"path": [
								"identity",
								"connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Lesson 1.3: Signing Out from Acumatica ERP",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"postman.setNextRequest(null);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{InstanceURL}}/entity/auth/logout",
							"host": [
								"{{InstanceURL}}"
							],
							"path": [
								"entity",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Part 2: Performance Optimization",
			"item": [
				{
					"name": "Lesson 2.1: Retrieving the List of Sales Orders with Document and Shipment Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"The retrieved list is not empty\", function (){\r",
									"    const jsonResponse = pm.response.json();\r",
									"    pm.expect(jsonResponse).to.be.not.empty;\r",
									"});\r",
									"pm.test(\"The first item includes all requested fields\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData[0].OrderType.value).to.be.not.null;\r",
									"    pm.expect(jsonData[0].OrderNbr.value).to.be.not.null;\r",
									"    pm.expect(jsonData[0].CustomerID.value).to.be.not.null;\r",
									"    pm.expect(jsonData[0].CustomerOrder.value).to.be.not.null;\r",
									"    pm.expect(jsonData[0].Date.value).to.be.not.null;\r",
									"    pm.expect(jsonData[0].OrderedQty.value).to.be.not.null;\r",
									"    pm.expect(jsonData[0].OrderTotal.value).to.be.not.null;\r",
									"    pm.expect(jsonData[0].Details[0].InventoryID.value).to.be.not.null;\r",
									"    pm.expect(jsonData[0].Details[0].OrderQty.value).to.be.not.null;\r",
									"    pm.expect(jsonData[0].Details[0].UnitPrice.value).to.be.not.null;\r",
									"    pm.expect(jsonData[0].Shipments[0].InvoiceNbr.value).to.be.not.null;\r",
									"    pm.expect(jsonData[0].Shipments[0].ShipmentNbr.value).to.be.not.null;\r",
									"});\r",
									"pm.test(\"Response does not contain CurrencyID\", function () {\r",
									"    pm.expect(pm.response.text()).to.not.include(\"CurrencyID\");\r",
									"});\r",
									"postman.setNextRequest(\"Lesson 2.2: Retrieving the List of Sales Orders in Batches (First Five Records)\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{DefaultEndpointURL}}/SalesOrder?$select=OrderNbr,OrderType,CustomerID,CustomerOrder,Details/InventoryID,Details/OrderQty,Details/UnitPrice,Date,OrderedQty,OrderTotal,Shipments/InvoiceNbr,Shipments/ShipmentNbr&$filter=CustomerID eq 'C000000003'&$expand=Details,Shipments",
							"host": [
								"{{DefaultEndpointURL}}"
							],
							"path": [
								"SalesOrder"
							],
							"query": [
								{
									"key": "$select",
									"value": "OrderNbr,OrderType,CustomerID,CustomerOrder,Details/InventoryID,Details/OrderQty,Details/UnitPrice,Date,OrderedQty,OrderTotal,Shipments/InvoiceNbr,Shipments/ShipmentNbr"
								},
								{
									"key": "$filter",
									"value": "CustomerID eq 'C000000003'"
								},
								{
									"key": "$expand",
									"value": "Details,Shipments"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Lesson 2.2: Retrieving the List of Sales Orders in Batches (First Five Records)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"The retrieved list has 5 items\", function (){\r",
									"    const jsonResponse = pm.response.json();\r",
									"    pm.expect(jsonResponse).to.have.lengthOf(5);\r",
									"});\r",
									"postman.setNextRequest(\"Lesson 2.2: Retrieving the List of Sales Orders in Batches (Next Five Records)\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{DefaultEndpointURL}}/SalesOrder?$select=OrderNbr,OrderType,CustomerID,OrderTotal&$filter=CustomerID eq 'C000000003'&$top=5",
							"host": [
								"{{DefaultEndpointURL}}"
							],
							"path": [
								"SalesOrder"
							],
							"query": [
								{
									"key": "$select",
									"value": "OrderNbr,OrderType,CustomerID,OrderTotal"
								},
								{
									"key": "$filter",
									"value": "CustomerID eq 'C000000003'"
								},
								{
									"key": "$top",
									"value": "5"
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Lesson 2.2: Retrieving the List of Sales Orders in Batches (Next Five Records)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"The retrieved list has 4 items\", function (){\r",
									"    const jsonResponse = pm.response.json();\r",
									"    pm.expect(jsonResponse).to.have.lengthOf(4);\r",
									"});\r",
									"postman.setNextRequest(\"Lesson 2.3: Retrieving the List of Payments (Failed Request)\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{DefaultEndpointURL}}/SalesOrder?$select=OrderNbr,OrderType,CustomerID,OrderTotal&$filter=CustomerID eq 'C000000003'&$top=5&$skip=5",
							"host": [
								"{{DefaultEndpointURL}}"
							],
							"path": [
								"SalesOrder"
							],
							"query": [
								{
									"key": "$select",
									"value": "OrderNbr,OrderType,CustomerID,OrderTotal"
								},
								{
									"key": "$filter",
									"value": "CustomerID eq 'C000000003'"
								},
								{
									"key": "$top",
									"value": "5"
								},
								{
									"key": "$skip",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Lesson 2.3: Retrieving the List of Payments (Failed Request)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"pm.test(\"Body contains the exception message\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Optimization cannot be performed\");\r",
									"});\r",
									"postman.setNextRequest(\"Lesson 2.3: Retrieving the List of Key Fields of Payments\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{DefaultEndpointURL}}/Payment?$select=ReferenceNbr,Type,Status,ApplicationDate,ApplicationHistory/DisplayDocType,ApplicationHistory/DisplayRefNbr&$filter=Type eq 'Payment' and CustomerID eq 'C000000003'&$expand=ApplicationHistory",
							"host": [
								"{{DefaultEndpointURL}}"
							],
							"path": [
								"Payment"
							],
							"query": [
								{
									"key": "$select",
									"value": "ReferenceNbr,Type,Status,ApplicationDate,ApplicationHistory/DisplayDocType,ApplicationHistory/DisplayRefNbr"
								},
								{
									"key": "$filter",
									"value": "Type eq 'Payment' and CustomerID eq 'C000000003'"
								},
								{
									"key": "$expand",
									"value": "ApplicationHistory"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Lesson 2.3: Retrieving the List of Key Fields of Payments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"The retrieved list has one item\", function (){\r",
									"    const jsonResponse = pm.response.json();\r",
									"    pm.expect(jsonResponse).to.have.lengthOf(1);\r",
									"});\r",
									"pm.test(\"The item includes all requested fields\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData[0].CustomerID.value).to.be.not.null;\r",
									"    pm.expect(jsonData[0].ReferenceNbr.value).to.be.not.null;\r",
									"    pm.expect(jsonData[0].Type.value).to.be.not.null;\r",
									"});\r",
									"postman.setNextRequest(\"Lesson 2.3: Retrieving Payments by Key Fields\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{DefaultEndpointURL}}/Payment?$select=ReferenceNbr,Type&$filter=Type eq 'Payment' and CustomerID eq 'C000000003'",
							"host": [
								"{{DefaultEndpointURL}}"
							],
							"path": [
								"Payment"
							],
							"query": [
								{
									"key": "$select",
									"value": "ReferenceNbr,Type"
								},
								{
									"key": "$filter",
									"value": "Type eq 'Payment' and CustomerID eq 'C000000003'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Lesson 2.3: Retrieving Payments by Key Fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"The application history has one item\", function (){\r",
									"    const jsonResponse = pm.response.json();\r",
									"    pm.expect(jsonResponse.ApplicationHistory).to.have.lengthOf(1);\r",
									"});\r",
									"postman.setNextRequest(\"Lesson 3.1: Retrieving the Stock Item\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{DefaultEndpointURL}}/Payment/Payment/000001?$select=ReferenceNbr,Type,Status,ApplicationDate,ApplicationHistory/DisplayDocType,ApplicationHistory/DisplayRefNbr&$expand=ApplicationHistory",
							"host": [
								"{{DefaultEndpointURL}}"
							],
							"path": [
								"Payment",
								"Payment",
								"000001"
							],
							"query": [
								{
									"key": "$select",
									"value": "ReferenceNbr,Type,Status,ApplicationDate,ApplicationHistory/DisplayDocType,ApplicationHistory/DisplayRefNbr"
								},
								{
									"key": "$expand",
									"value": "ApplicationHistory"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Part 3: Retrieval of Attachments",
			"item": [
				{
					"name": "Lesson 3.1: Retrieving the Stock Item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"The stock item has files\", function (){\r",
									"    const jsonResponse = pm.response.json();\r",
									"    pm.expect(jsonResponse.files).to.be.not.empty;\r",
									"});\r",
									"const jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"fileRef\", jsonData.files[0].href);\r",
									"postman.setNextRequest(\"Lesson 3.1: Retrieving the File\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{DefaultEndpointURL}}/StockItem/AAMACHINE1?$select=InventoryID,files&$expand=files",
							"host": [
								"{{DefaultEndpointURL}}"
							],
							"path": [
								"StockItem",
								"AAMACHINE1"
							],
							"query": [
								{
									"key": "$select",
									"value": "InventoryID,files"
								},
								{
									"key": "$expand",
									"value": "files"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Lesson 3.1: Retrieving the File",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"The stock item contains a JPG file\", function (){\r",
									"    pm.expect(pm.response.text()).to.include(\"Exif\");\r",
									"});\r",
									"postman.setNextRequest(\"Lesson 1.3: Signing Out from Acumatica ERP\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BaseURL}}{{fileRef}}",
							"host": [
								"{{BaseURL}}{{fileRef}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "password",
				"value": "{{Password}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{Username}}",
				"type": "string"
			},
			{
				"key": "clientId",
				"value": "{{ClientID}}",
				"type": "string"
			},
			{
				"key": "clientSecret",
				"value": "{{ClientSecret}}",
				"type": "string"
			},
			{
				"key": "accessTokenUrl",
				"value": "{{InstanceURL}}/identity/connect/token",
				"type": "string"
			},
			{
				"key": "tokenName",
				"value": "MyStoreIntegration",
				"type": "string"
			},
			{
				"key": "scope",
				"value": "api",
				"type": "string"
			},
			{
				"key": "grant_type",
				"value": "password_credentials",
				"type": "string"
			},
			{
				"key": "client_authentication",
				"value": "body",
				"type": "string"
			},
			{
				"key": "accessToken",
				"value": "{{accessToken}}",
				"type": "string"
			},
			{
				"key": "tokenType",
				"value": "Bearer",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "BaseURL",
			"value": "https://localhost",
			"type": "string"
		},
		{
			"key": "InstanceURL",
			"value": "{{BaseURL}}/MyStoreInstance",
			"type": "string"
		},
		{
			"key": "DefaultEndpointURL",
			"value": "{{InstanceURL}}/entity/Default/24.200.001",
			"type": "string"
		},
		{
			"key": "ClientID",
			"value": "FE34CB3A-7B98-F6E4-FCED-0480D54868D5@MyStore"
		},
		{
			"key": "ClientSecret",
			"value": "Lmt-ZCYOYMRCvozN7xgtFw"
		},
		{
			"key": "Username",
			"value": "admin"
		},
		{
			"key": "Password",
			"value": "123",
			"type": "string"
		},
		{
			"key": "fileRef",
			"value": "",
			"type": "string"
		},
		{
			"key": "accessToken",
			"value": "",
			"type": "string"
		}
	]
}