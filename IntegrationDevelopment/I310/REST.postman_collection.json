{
	"info": {
		"_postman_id": "bcfa2679-0042-4bea-a18d-71de4e2082e8",
		"name": "MyBIIntegrationREST",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1878971"
	},
	"item": [
		{
			"name": "Part 1: Getting Started with the REST API",
			"item": [
				{
					"name": "Activity 1.2.1: To Sign In to Acumatica ERP",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"pm.test(\".ASPXAUTH recieved\", function () {\r",
									"    pm.expect(pm.cookies.indexOf('.ASPXAUTH')).to.be.not.null;\r",
									"});\r",
									"pm.test(\".ASP.NET_SessionId recieved\", function () {\r",
									"    pm.expect(pm.cookies.indexOf('.ASP.NET_SessionId')).to.be.not.null;\r",
									"});\r",
									"pm.execution.setNextRequest(\"Lesson 2.1: Retrieving the List of Customers with Contacts\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"{{Username}}\",\r\n  \"password\": \"{{Password}}\",\r\n  \"tenant\": \"{{Tenant}}\",\r\n  \"branch\": \"{{Branch}}\"\r\n}"
						},
						"url": {
							"raw": "{{InstanceURL}}/entity/auth/login",
							"host": [
								"{{InstanceURL}}"
							],
							"path": [
								"entity",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Activity 1.2.2: To Sign Out from Acumatica ERP",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"pm.test(\".ASPXAUTH not recieved\", function () {\r",
									"    pm.expect(pm.cookies.indexOf('.ASPXAUTH')).to.be.eql(-1);\r",
									"});\r",
									"pm.test(\".ASP.NET_SessionId not recieved\", function () {\r",
									"    pm.expect(pm.cookies.indexOf('.ASP.NET_SessionId')).to.be.eql(-1);\r",
									"});\r",
									"pm.execution.setNextRequest(null);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{InstanceURL}}/entity/auth/logout",
							"host": [
								"{{InstanceURL}}"
							],
							"path": [
								"entity",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Part 2: Data Retrieval",
			"item": [
				{
					"name": "Activity 2.1.1: To Retrieve the List of Customers with Contacts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"The retrieved list is not empty\", function (){\r",
									"    const jsonResponse = pm.response.json();\r",
									"    pm.expect(jsonResponse).to.be.not.empty;\r",
									"});\r",
									"pm.execution.setNextRequest(\"Lesson 2.2: Retrieving the Quantities of Stock Items\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{DefaultEndpointURL}}/Customer?$expand=MainContact,MainContact/Address&$select=CustomerID,CustomerName,CustomerClass,MainContact/Email,MainContact/Phone1,MainContact/Address/AddressLine1,MainContact/Address/AddressLine2,MainContact/Address/City,MainContact/Address/State,MainContact/Address/PostalCode",
							"host": [
								"{{DefaultEndpointURL}}"
							],
							"path": [
								"Customer"
							],
							"query": [
								{
									"key": "$expand",
									"value": "MainContact,MainContact/Address"
								},
								{
									"key": "$select",
									"value": "CustomerID,CustomerName,CustomerClass,MainContact/Email,MainContact/Phone1,MainContact/Address/AddressLine1,MainContact/Address/AddressLine2,MainContact/Address/City,MainContact/Address/State,MainContact/Address/PostalCode"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Activity 2.2.1: To Retrieve the Quantities of Stock Items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"The retrieved list is not empty\", function (){\r",
									"    const jsonResponse = pm.response.json();\r",
									"    pm.expect(jsonResponse.ItemAvailabilityDataInquiryDetails).to.be.not.empty;\r",
									"});\r",
									"pm.execution.setNextRequest(\"Lesson 3.1: Retrieving the List of Modified Stock Items\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\n}"
						},
						"url": {
							"raw": "{{InstanceURL}}/entity/ItemAvailabilityData/0001/ItemAvailabilityDataInquiry?$expand=ItemAvailabilityDataInquiryDetails",
							"host": [
								"{{InstanceURL}}"
							],
							"path": [
								"entity",
								"ItemAvailabilityData",
								"0001",
								"ItemAvailabilityDataInquiry"
							],
							"query": [
								{
									"key": "$expand",
									"value": "ItemAvailabilityDataInquiryDetails"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Activity 2.3.1: To Retrieve the List of Modified Stock Items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response contains AALEGO500\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"AALEGO500\");\r",
									"});\r",
									"pm.test(\"Response does not contain AACOMPUT01\", function () {\r",
									"    pm.expect(pm.response.text()).to.not.include(\"AACOMPUT01\");\r",
									"});\r",
									"pm.execution.setNextRequest(\"Lesson 1.1: Signing Out from Acumatica ERP\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Set current date\r",
									"var moment = require('moment');\r",
									"pm.environment.set('currentDate', moment().format((\"YYYY-MM-DD\")));\r",
									"\r",
									"//Modify stock items\r",
									"var requestAACOMPUT01 = {\r",
									"    url: pm.variables.replaceIn('{{InstanceURL}}/entity/Default/23.200.001/StockItem?$select=InventoryID,ItemStatus'),\r",
									"    method: 'PUT',\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: '{\"InventoryID\": {\"value\": \"AACOMPUT01\"},\"ItemStatus\": {\"value\": \"Inactive\"}}'\r",
									"    },\r",
									"    header: {\r",
									"        'Content-Type': 'application/json'\r",
									"    }\r",
									"};\r",
									"pm.sendRequest(requestAACOMPUT01,  (error, response) => {\r",
									"  if (error) {\r",
									"    console.log(error);\r",
									"  }\r",
									"\r",
									"  pm.test('Response for AACOMPUT01 should be OK to process', () => {\r",
									"    pm.expect(error).to.equal(null);\r",
									"    pm.expect(response).to.have.property('code', 200);\r",
									"    pm.expect(response).to.have.property('status', 'OK');\r",
									"  });\r",
									"\r",
									"var requestAALEGO500 = {\r",
									"    url: pm.variables.replaceIn('{{InstanceURL}}/entity/Default/23.200.001/StockItem?$select=InventoryID,Description'),\r",
									"    method: 'PUT',\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: '{\"InventoryID\": {\"value\": \"AALEGO500\"},\"Description\": {\"value\": \"Lego 500 piece set.\"}}'\r",
									"    },\r",
									"    header: {\r",
									"        'Content-Type': 'application/json'\r",
									"    }\r",
									"};\r",
									"pm.sendRequest(requestAALEGO500, (error, response) => {\r",
									"  if (error) {\r",
									"    console.log(error);\r",
									"  }\r",
									"\r",
									"  pm.test('Response for AALEGO500 should be OK to process', () => {\r",
									"    pm.expect(error).to.equal(null);\r",
									"    pm.expect(response).to.have.property('code', 200);\r",
									"    pm.expect(response).to.have.property('status', 'OK');\r",
									"  });\r",
									"});\r",
									"\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{DefaultEndpointURL}}/StockItem?$filter=ItemStatus eq 'Active' and LastModified gt datetimeoffset'{{currentDate}}'&$expand=WarehouseDetails&$select=InventoryID,Description,WarehouseDetails/WarehouseID,WarehouseDetails/QtyOnHand,ItemClass,BaseUOM",
							"host": [
								"{{DefaultEndpointURL}}"
							],
							"path": [
								"StockItem"
							],
							"query": [
								{
									"key": "$filter",
									"value": "ItemStatus eq 'Active' and LastModified gt datetimeoffset'{{currentDate}}'"
								},
								{
									"key": "$expand",
									"value": "WarehouseDetails"
								},
								{
									"key": "$select",
									"value": "InventoryID,Description,WarehouseDetails/WarehouseID,WarehouseDetails/QtyOnHand,ItemClass,BaseUOM"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "BaseURL",
			"value": "http://localhost",
			"type": "string"
		},
		{
			"key": "InstanceURL",
			"value": "{{BaseURL}}/MyStoreInstance",
			"type": "string"
		},
		{
			"key": "DefaultEndpointURL",
			"value": "{{InstanceURL}}/entity/Default/24.200.001",
			"type": "string"
		},
		{
			"key": "Username",
			"value": "admin",
			"type": "string"
		},
		{
			"key": "Password",
			"value": "123",
			"type": "string"
		},
		{
			"key": "Tenant",
			"value": "MyCompany",
			"type": "string"
		},
		{
			"key": "Branch",
			"value": "MYSTORE",
			"type": "string"
		}
	]
}