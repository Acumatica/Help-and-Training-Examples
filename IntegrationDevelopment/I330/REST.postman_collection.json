{
	"info": {
		"_postman_id": "7d306dca-c01e-4e42-87ca-c7c74ecfa19d",
		"name": "MyStoreIntegration_DataManipulation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1878971"
	},
	"item": [
		{
			"name": "Prerequisites",
			"item": [
				{
					"name": "Requesting token manually",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var responseData = pm.response.json();\r",
									"pm.collectionVariables.set(\"accessToken\",responseData.access_token);\r",
									"postman.setNextRequest(\"Lesson 1.1: Creating a Shipment\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{Username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{Password}}",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "api",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{ClientID}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{ClientSecret}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{InstanceURL}}/identity/connect/token",
							"host": [
								"{{InstanceURL}}"
							],
							"path": [
								"identity",
								"connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Signing out from Acumatica ERP",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"postman.setNextRequest(\"null\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{InstanceURL}}/entity/auth/logout",
							"host": [
								"{{InstanceURL}}"
							],
							"path": [
								"entity",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Part 1: Creation of Records",
			"item": [
				{
					"name": "Lesson 1.1: Creating a Shipment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"The shipment is created for three items\", function (){\r",
									"    const jsonResponse = pm.response.json();\r",
									"    pm.expect(jsonResponse.Details).to.have.lengthOf(3);\r",
									"});\r",
									"pm.test(\"The shipment is on hold\", function (){\r",
									"    const jsonResponse = pm.response.json();\r",
									"    pm.expect(jsonResponse.Status.value).to.eql('On Hold');\r",
									"});\r",
									"postman.setNextRequest(\"Lesson 1.2: Creating a Stock Item with Attributes\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"Type\":{\"value\":\"Shipment\"},\n\t\"CustomerID\":{\"value\":\"C000000003\"},\n\t\"WarehouseID\":{\"value\":\"MAIN\"},\n    \"ShipmentDate\":{\"value\":\"2024-11-01\"},\n\t\"Details\":[\n\t\t{\n\t\t\t\"OrderType\":{\"value\":\"SO\"},\n\t\t\t\"OrderNbr\":{\"value\":\"000004\"}\n\t\t},\n\t\t{\n\t\t\t\"OrderType\":{\"value\":\"SO\"},\n\t\t\t\"OrderNbr\":{\"value\":\"000006\"}\n\t\t}\n\t]\n}"
						},
						"url": {
							"raw": "{{DefaultEndpointURL}}/Shipment?$select=Type,ShipmentNbr,Status,Details/InventoryID&$expand=Details",
							"host": [
								"{{DefaultEndpointURL}}"
							],
							"path": [
								"Shipment"
							],
							"query": [
								{
									"key": "$select",
									"value": "Type,ShipmentNbr,Status,Details/InventoryID"
								},
								{
									"key": "$expand",
									"value": "Details"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Lesson 1.2: Creating a Stock Item with Attributes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"The stock item has two attributes\", function (){\r",
									"    const jsonResponse = pm.response.json();\r",
									"    pm.expect(jsonResponse.Attributes).to.have.lengthOf(2);\r",
									"});\r",
									"postman.setNextRequest(\"Lesson 2.1: Updating a Customer Account\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"InventoryID\":{\"value\":\"BASESERV1\"},\n\t\"Description\":{\"value\":\"Baseline level of performance\"},\n\t\"ItemClass\":{\"value\":\"STOCKITEM\"},\n\t\"Attributes\":[\n\t\t{\n\t\t\t\"AttributeID\":{\"value\":\"Operation System\"},\n\t\t\t\"Value\":{\"value\":\"Windows\"}\n\t\t},\n\t\t{\n\t\t\t\"AttributeID\":{\"value\":\"SOFTVER\"},\n\t\t\t\"Value\":{\"value\":\"Server 2012 R2\"}\n\t\t}\n\t]\n}"
						},
						"url": {
							"raw": "{{DefaultEndpointURL}}/StockItem?$select=InventoryID,Attributes/AttributeDescription,Attributes/Value&$expand=Attributes",
							"host": [
								"{{DefaultEndpointURL}}"
							],
							"path": [
								"StockItem"
							],
							"query": [
								{
									"key": "$select",
									"value": "InventoryID,Attributes/AttributeDescription,Attributes/Value"
								},
								{
									"key": "$expand",
									"value": "Attributes"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Part 2: Update of Records",
			"item": [
				{
					"name": "Lesson 2.1: Updating a Customer Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Billing contact is Mr. Jack Green\", function (){\r",
									"    const jsonResponse = pm.response.json();\r",
									"    pm.expect(jsonResponse.BillingContact.Attention.value).to.eq(\"Mr. Jack Green\");\r",
									"});\r",
									"postman.setNextRequest(\"Lesson 2.2: Retrieving the Sales Order with Details\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"CustomerClass\":{\"value\":\"INTL\"},\r\n\t\"BillingContactOverride\":{\"value\":true},\r\n\t\"BillingContact\":{\r\n\t\t\"Email\":{\"value\":\"green@jevy-comp.con\"},\r\n\t\t\"Attention\":{\"value\":\"Mr. Jack Green\"},\r\n\t\t\"JobTitle\":{\"value\":\"\"}\r\n\t}\r\n}\r\n"
						},
						"url": {
							"raw": "{{DefaultEndpointURL}}/Customer?$filter=MainContact/Email eq 'info@jevy-comp.con'&$expand=MainContact,BillingContact&$select=CustomerID,CustomerClass,BillingContact/Email",
							"host": [
								"{{DefaultEndpointURL}}"
							],
							"path": [
								"Customer"
							],
							"query": [
								{
									"key": "$filter",
									"value": "MainContact/Email eq 'info@jevy-comp.con'"
								},
								{
									"key": "$expand",
									"value": "MainContact,BillingContact"
								},
								{
									"key": "$select",
									"value": "CustomerID,CustomerClass,BillingContact/Email"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Lesson 2.2: Retrieving the Sales Order with Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"The sales order has three detail lines\", function (){\r",
									"    const jsonResponse = pm.response.json();\r",
									"    pm.expect(jsonResponse).to.have.lengthOf(1);\r",
									"    pm.expect(jsonResponse[0].Details).to.have.lengthOf(3);\r",
									"    jsonResponse[0].Details.forEach(myFunction);\r",
									"    function myFunction(item){\r",
									"        if (item.InventoryID.value === \"CONGRILL\") {pm.collectionVariables.set(\"CONGRILL_detail_ID\",item.id);};\r",
									"        if (item.InventoryID.value === \"AALEGO500\") {pm.collectionVariables.set(\"AALEGO500_detail_ID\",item.id);}\r",
									"    }\r",
									"});\r",
									"\r",
									"postman.setNextRequest(\"Lesson 2.2: Updating Detail Lines\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{DefaultEndpointURL}}/SalesOrder?$expand=Details&$filter=OrderType eq 'SO' and CustomerOrder eq 'SO248-563-06'&$select=OrderNbr,OrderType,Details/InventoryID,Details/WarehouseID",
							"host": [
								"{{DefaultEndpointURL}}"
							],
							"path": [
								"SalesOrder"
							],
							"query": [
								{
									"key": "$expand",
									"value": "Details"
								},
								{
									"key": "$filter",
									"value": "OrderType eq 'SO' and CustomerOrder eq 'SO248-563-06'"
								},
								{
									"key": "$select",
									"value": "OrderNbr,OrderType,Details/InventoryID,Details/WarehouseID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Lesson 2.2: Updating Detail Lines",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"The sales order has two detail lines\", function (){\r",
									"    const jsonResponse = pm.response.json();\r",
									"    pm.expect(jsonResponse.Details).to.have.lengthOf(2);\r",
									"});\r",
									"pm.test(\"The sales order does not include CONGRILL\", function (){\r",
									"    pm.expect(pm.response.text()).to.not.include(\"CONGRILL\");\r",
									"});\r",
									"pm.test(\"The sales order includes 5 AALEGO500 items\", function (){\r",
									"    const jsonResponse = pm.response.json();\r",
									"    jsonResponse.Details.forEach(myFunction);\r",
									"    function myFunction(item){\r",
									"        if (item.InventoryID.value === 'AALEGO500') {\r",
									"            pm.expect(item.OrderQty.value).to.eq(5.0);};\r",
									"    }\r",
									"});\r",
									"postman.setNextRequest(\"Lesson 3.1: Releasing from Hold of an Invoice\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"OrderType\":{\"value\":\"SO\"},\n\t\"OrderNbr\":{\"value\":\"000003\"},\n\t\"Hold\":{\"value\":false},\n\t\"Details\":[\n\t\t{\n\t\t\t\"id\":\"{{CONGRILL_detail_ID}}\",\n\t\t\t\"delete\":true\n\t\t},\n\t\t{\n\t\t\t\"id\":\"{{AALEGO500_detail_ID}}\",\n\t\t\t\"OrderQty\":{\"value\":5.0}\n\t\t}\n\t]\n}"
						},
						"url": {
							"raw": "{{DefaultEndpointURL}}/SalesOrder?$select=OrderType,OrderNbr,OrderedQty,OrderTotal,Details/OrderQty,Details/InventoryID&$expand=Details",
							"host": [
								"{{DefaultEndpointURL}}"
							],
							"path": [
								"SalesOrder"
							],
							"query": [
								{
									"key": "$select",
									"value": "OrderType,OrderNbr,OrderedQty,OrderTotal,Details/OrderQty,Details/InventoryID"
								},
								{
									"key": "$expand",
									"value": "Details"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Part 3: Execution of Actions",
			"item": [
				{
					"name": "Lesson 3.1: Releasing from Hold of an Invoice",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"The sales invoice has the Balanced status\", function (){\r",
									"    const jsonResponse = pm.response.json();\r",
									"    pm.expect(jsonResponse.Status.value).to.equal(\"Balanced\");\r",
									"});\r",
									"postman.setNextRequest(\"Lesson 3.1: Invoking Release of an Invoice\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Type\":{\"value\":\"Invoice\"},\r\n    \"ReferenceNbr\":{\"value\":\"INV000046\"},\r\n    \"Hold\":{\"value\":false}\r\n}"
						},
						"url": {
							"raw": "{{DefaultEndpointURL}}/SalesInvoice",
							"host": [
								"{{DefaultEndpointURL}}"
							],
							"path": [
								"SalesInvoice"
							]
						}
					},
					"response": []
				},
				{
					"name": "Lesson 3.1: Invoking Release of an Invoice",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 202\", function () {\r",
									"    pm.response.to.have.status(202);\r",
									"});\r",
									"pm.collectionVariables.set(\"SalesInvoiceStatusUrl\", pm.response.headers.get(\"Location\"));\r",
									"postman.setNextRequest(\"Lesson 3.1: Retrieving the Status of the Release Operation\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"entity\":{\r\n\t\t\"Type\":{\"value\":\"Invoice\"},\r\n\t\t\"ReferenceNbr\":{\"value\":\"INV000046\"}\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{DefaultEndpointURL}}/SalesInvoice/ReleaseSalesInvoice",
							"host": [
								"{{DefaultEndpointURL}}"
							],
							"path": [
								"SalesInvoice",
								"ReleaseSalesInvoice"
							]
						}
					},
					"response": []
				},
				{
					"name": "Lesson 3.1: Retrieving the Status of the Release Operation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code != 204)\r",
									"{\r",
									"    setTimeout(function(){},10000);\r",
									"    postman.setNextRequest(\"Lesson 3.1: Retrieving the Status of the Release Operation\");\r",
									"}\r",
									"else\r",
									"{\r",
									"    postman.setNextRequest(\"Lesson 3.1: Retrieving the Released Invoice\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BaseURL}}{{SalesInvoiceStatusUrl}}",
							"host": [
								"{{BaseURL}}{{SalesInvoiceStatusUrl}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Lesson 3.1: Retrieving the Released Invoice",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"The sales invoice has the Open status\", function (){\r",
									"    const jsonResponse = pm.response.json();\r",
									"    pm.expect(jsonResponse.Status.value).to.equal(\"Open\");\r",
									"});\r",
									"postman.setNextRequest(\"Lesson 5.1: Adding a Note to a Stock Item\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{DefaultEndpointURL}}/SalesInvoice/Invoice/INV000046?$select=ReferenceNbr,Type,Status",
							"host": [
								"{{DefaultEndpointURL}}"
							],
							"path": [
								"SalesInvoice",
								"Invoice",
								"INV000046"
							],
							"query": [
								{
									"key": "$select",
									"value": "ReferenceNbr,Type,Status"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Part 4: Processing of Payments by Credit Cards",
			"item": [
				{
					"name": "Lesson 4.1: Registering a Customer Credit Card",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"PaymentMethod\":{\"value\":\"VISA\"},\r\n\t\"CustomerID\":{\"value\":\"C000000003\"},\r\n\t\"CustomerProfileID\":{\"value\":\"37100472\"},\r\n\t\"CashAccount\":{\"value\":\"102050MYST\"},\r\n\t\"Details\":[\r\n\t\t{\r\n\t\t\t\"Name\":{\"value\":\"Payment Profile ID\"},\r\n\t\t\t\"Value\":{\"value\":\"911169122\"}\r\n\t\t}\r\n\t]\r\n}"
						},
						"url": {
							"raw": "{{DefaultEndpointURL}}/CustomerPaymentMethod?$select=CardAccountNbr,Details/Name&$expand=Details",
							"host": [
								"{{DefaultEndpointURL}}"
							],
							"path": [
								"CustomerPaymentMethod"
							],
							"query": [
								{
									"key": "$select",
									"value": "CardAccountNbr,Details/Name"
								},
								{
									"key": "$expand",
									"value": "Details"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Part 5: Attachment of Files and Notes",
			"item": [
				{
					"name": "Lesson 5.1: Adding a Note to a Stock Item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"A note is attached\", function (){\r",
									"    const jsonResponse = pm.response.json();\r",
									"    pm.expect(jsonResponse.note.value).to.equal(\"My note\");\r",
									"});\r",
									"postman.setNextRequest(\"Signing out from Acumatica ERP\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"InventoryID\":{\"value\":\"AALEGO500\"},\n\t\"note\": {\"value\": \"My note\"}\n}"
						},
						"url": {
							"raw": "{{DefaultEndpointURL}}/StockItem?$select=InventoryID",
							"host": [
								"{{DefaultEndpointURL}}"
							],
							"path": [
								"StockItem"
							],
							"query": [
								{
									"key": "$select",
									"value": "InventoryID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Lesson 5.2: Getting the Put Files URL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"const jsonResponse = pm.response.json();\r",
									"const fileRef = jsonResponse._links['files:put'];\r",
									"pm.collectionVariables.set('StockItemFileUrl', fileRef.replace('{filename}','T2MCRO.jpg'));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "file",
							"file": {
								"src": ""
							}
						},
						"url": {
							"raw": "{{DefaultEndpointURL}}/StockItem/AALEGO500?$select=InventoryID",
							"host": [
								"{{DefaultEndpointURL}}"
							],
							"path": [
								"StockItem",
								"AALEGO500"
							],
							"query": [
								{
									"key": "$select",
									"value": "InventoryID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Lesson 5.2: Attaching the File",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/octet-stream",
								"type": "text"
							}
						],
						"body": {
							"mode": "file",
							"file": {
								"src": "/C:/Work/Help-and-Training-Examples/IntegrationDevelopment/I330/SourceFiles/T2MCRO.jpg"
							}
						},
						"url": {
							"raw": "{{BaseURL}}{{StockItemFileUrl}}",
							"host": [
								"{{BaseURL}}{{StockItemFileUrl}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "clientSecret",
				"value": "{{ClientSecret}}",
				"type": "string"
			},
			{
				"key": "clientId",
				"value": "{{ClientID}}",
				"type": "string"
			},
			{
				"key": "password",
				"value": "{{Password}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{Username}}",
				"type": "string"
			},
			{
				"key": "accessTokenUrl",
				"value": "{{InstanceURL}}/identity/connect/token",
				"type": "string"
			},
			{
				"key": "tokenName",
				"value": "MyStoreIntegration",
				"type": "string"
			},
			{
				"key": "scope",
				"value": "api",
				"type": "string"
			},
			{
				"key": "grant_type",
				"value": "password_credentials",
				"type": "string"
			},
			{
				"key": "client_authentication",
				"value": "body",
				"type": "string"
			},
			{
				"key": "accessToken",
				"value": "{{accessToken}}",
				"type": "string"
			},
			{
				"key": "tokenType",
				"value": "Bearer",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "BaseURL",
			"value": "https://localhost",
			"type": "string"
		},
		{
			"key": "InstanceURL",
			"value": "{{BaseURL}}/MyStoreInstance",
			"type": "string"
		},
		{
			"key": "DefaultEndpointURL",
			"value": "{{InstanceURL}}/entity/Default/24.200.001",
			"type": "string"
		},
		{
			"key": "Username",
			"value": "admin"
		},
		{
			"key": "Password",
			"value": "123",
			"type": "string"
		},
		{
			"key": "ClientID",
			"value": "F4F1D612-F323-2F78-4FA6-B4F0713815AD@MyStore"
		},
		{
			"key": "ClientSecret",
			"value": "H3n846G6CgPTjwSHpu6U-Q"
		},
		{
			"key": "SalesInvoiceStatusUrl",
			"value": "",
			"type": "string"
		},
		{
			"key": "accessToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "CONGRILL_detail_ID",
			"value": ""
		},
		{
			"key": "AALEGO500_detail_ID",
			"value": ""
		},
		{
			"key": "StockItemFileUrl",
			"value": ""
		}
	]
}